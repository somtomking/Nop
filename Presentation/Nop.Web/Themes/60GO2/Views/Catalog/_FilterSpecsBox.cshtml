@model CatalogPagingFilteringModel.SpecificationFilterModel
@using Nop.Web.Models.Catalog;
@{
    var notFilteredItemsGroups = Model.NotFilteredItems.GroupBy(x => x.SpecificationAttributeName);
}
@if (Model.Enabled)
{
    int i = 0;
    if (Model.NotFilteredItems.Count > 0)
    {
        foreach (var group in notFilteredItemsGroups)
        {
            i++;
            var groupList = group.ToList();
            if (i > 3)
            {
    @Html.Raw("<div class=\"proCondition clearfix groupmore\" style=\"display: none;\">")
            }
            else
            {
    @Html.Raw("<div class=\"proCondition clearfix\">")
            }
    <div class="title">
        @groupList[0].SpecificationAttributeName:
    </div>
    <div class="con">
        <ul class="list-02">
            @{
            int j = 0;
            }
            @foreach (var spec in groupList)
            {
                j++;
                if (j > 16)
                {
                @Html.Raw("<li style=\"display: none;\" class=\"specmoreitem\">")
                }
                else
                {
                @Html.Raw("<li>")
                }
                <a href="@spec.FilterUrl">@spec.SpecificationAttributeOptionName</a>
                @Html.Raw("</li>")
            }
        </ul>
    </div>
    if (groupList.Count > 16)
    {
        <div class="other">
            <button class="btn btn-default btn-xs" type="button" onclick="specMoreFilter(this);return false;">@T("Filtering.More")<span class="caret"></span></button>
        </div>
    }
    @Html.Raw("</div>")
        }
    }
    if (i > 3)
    {   
    @Html.Partial("_FilterMoreOptions")
    }
    <script type="text/javascript">
        function specMoreFilter(obj) {
            var ul = $(obj).parent().siblings("div").eq(1).find("ul");
            var lis = $(ul).find(".specmoreitem");
            if ($(lis).is(":hidden"))
                $(lis).show();
            else
                $(lis).hide();
        }
    </script>
}