@model Nop.Web.Models.Customer.CustomerAddressEditModel

<script type="text/javascript">
    function LoadCityList(provinceId, selectedCityId) {
        var ddlCities = $("#CityId");
        var statesProgress = $("#states-loading-progress2");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("GetCitiesByStateProvinceId"))",
            data: { "stateProvinceId": provinceId, "addEmptyCityIfRequired": "true" },
            success: function (data) {
                ddlCities.html('');
                $.each(data, function (id, option) {
                    var item = $("<option>").text(option.name).val(option.id);
                    if (option.id == selectedCityId) { item.attr("selected", "selected"); }
                    ddlCities.append(item);
                });
                //statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
                //statesProgress.hide();
            }
        });
    }

    function LoadDistrictList(cityId, selectedDistrictId) {
        var ddlDistricts = $("#DistrictId");
        var statesProgress = $("#states-loading-progress3");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("GetDistrictsByCityId"))",
            data: { "cityId": cityId, "addEmptyDistrictIfRequired": "true" },
            success: function (data) {
                ddlDistricts.html('');
                $.each(data, function (id, option) {
                    var item = $("<option>").text(option.name).val(option.id);
                    if (option.id == selectedDistrictId) { item.attr("selected", "selected"); }
                    ddlDistricts.append(item);
                });
                //statesProgress.hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
                //statesProgress.hide();
            }
        });
    }

    $(function () {
        $("#StateProvinceId").change(function () {
            var selectedItem = $(this).val();
            LoadCityList(selectedItem);

            var ddlDistricts = $("#DistrictId");
            ddlDistricts.html('');
            //ddlDistricts.append($('<option></option>').val(0).html("区"));
        });

        $("#CityId").change(function () {
            var selectedItem = $(this).val();
            LoadDistrictList(selectedItem);
        });
    });
</script>
<div id="dialog" style="display: none;">
    <div class="modal">
        <a href="###" class="close closeBtn"></a>
        <div class="modal-body clearfix">
            @using (Html.BeginForm("AddressAddOrUpdate", "Customer", FormMethod.Post, new { @class = "form-inline", id = "AddressAddOrUpdateForm" }))
            {
                <div class="formList">
                    <dl class="clearfix">
                        <dt>@T("Address.Fields.FirstName")：</dt>
                        <dd>
                            @Html.TextBoxFor(model => model.Address.FirstName, new { @class = "input-style input-m", maxlength = 10 })<br />
                            @Html.ValidationMessageFor(model => model.Address.FirstName)</dd>
                    </dl>
                    @if (Model.Address.PhoneEnabled)
                    {
                        <dl class="clearfix">
                            <dt>@T("Address.Fields.PhoneNumber"):</dt>
                            <dd>
                                @Html.TextBoxFor(model => model.Address.PhoneNumber, new { @class = "input-style input-m", maxlength = 11 })<br />
                                @Html.ValidationMessageFor(model => model.Address.PhoneNumber)
                            </dd>
                        </dl>
                    }
                    @if (Model.Address.CityEnabled || Model.Address.StateProvinceEnabled || Model.Address.ZipPostalCodeEnabled)
                    {
                        <dl class="clearfix">
                            <dt>@T("Address.Fields.Location")：</dt>
                            <dd>
                                @if (Model.Address.StateProvinceEnabled)
                                {              
                                    @Html.DropDownList("StateProvinceId", Model.Address.AvailableStates, new { @class = "select-style" })
                                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                    <span class="field-validation-error" data-valmsg-replace="true" data-valmsg-for="StateProvinceId"></span>                    
                                }
                                @if (Model.Address.CityEnabled)
                                {                  
                                    @Html.DropDownList("CityId", Model.Address.AvailableCities, new { @class = "select-style" })
                                    <span id="states-loading-progress2" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                    <span class="field-validation-error" data-valmsg-replace="true" data-valmsg-for="CityId"></span>
      
                                }
                                @if (Model.Address.DistrictEnabled)
                                {    
                                    @Html.DropDownList("DistrictId", Model.Address.AvailableDistricts, new { @class = "select-style" })
                                    <span id="states-loading-progress3" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                                    <span class="field-validation-error" data-valmsg-replace="true" data-valmsg-for="DistrictId"></span>          
                                }
                            </dd>
                        </dl>
                    }
                    @if (Model.Address.StreetAddressEnabled)
                    {
                        <dl class="clearfix">
                            <dt>@T("Address.Fields.Address1")：</dt>
                            <dd>
                                @Html.TextBoxFor(model => model.Address.Address1, new { @class = "input-style input-l", maxlength = 50 })<br />
                                @Html.ValidationMessageFor(model => model.Address.Address1)
                            </dd>
                        </dl>
                    }
                    @if (Model.Address.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.Address.Address2))
                    {
                        <dl class="clearfix">
                            <dt>@Html.LabelFor(model => model.Address.Address2, new { }, ":")</dt>
                            <dd>
                                @Html.TextBoxFor(model => model.Address.Address2, new { @class = "form-control input-sm inputText_01" })
                            </dd>
                        </dl>
                    }
                    @if (Model.Address.ZipPostalCodeEnabled)
                    {
                        <dl class="clearfix">
                            <dt>@T("Address.Fields.ZipPostalCode")：</dt>
                            <dd>
                                @Html.TextBoxFor(model => model.Address.ZipPostalCode, new { @class = "input-style input-m", maxlength = 6 })<br />
                                @Html.ValidationMessageFor(model => model.Address.ZipPostalCode)</dd>
                        </dl>
                    }
                </div>  
                <input id="hidCurrentEditId" type="hidden" value="-1" />
            }
        </div>
        <div class="modal-footer text-center">
            <a id="save_button" class="btn btn-green btn-sm mar_r_20">保 存</a>
            <a class="btn btn-default btn-sm close">取 消</a>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        //$("#StateProvinceId").rules("add", { min: 1, messages: { min: "请选择省份" } });
        //$("#CityId").rules("add", { min: 1, messages: { min: "请选择城市" } });
        //$("#DistrictId").rules("add", { min: 1, messages: { min: "请选择区" } });

        $("#save_button").click(function () {
            EditAddress();
        });

        $('#add-address-button').click(function (e) {
            AddAddress();
            e.preventDefault();
        });
    });

    function ShowEditAddress() {
        $("#dialog").lightbox_me({
            centered: true,
            onLoad: function () {
                $("#dialog").find("input:first").focus();
            }
        });
    }

    function HideEditAddress() {
        $("#dialog").trigger('close');
    }

    function ClearErrors() {
        $("#AddressAddOrUpdateForm").find("span.field-validation-error").html("");
    }

    function AddAddress() {
        $("#hidCurrentEditId").val("-1");
        $("#@Html.FieldIdFor(model => model.Address.FirstName)").val("");
        $("#@Html.FieldIdFor(model => model.Address.ZipPostalCode)").val("");
        $("#@Html.FieldIdFor(model => model.Address.PhoneNumber)").val("");
        $("#@Html.FieldIdFor(model => model.Address.Address1)").val("");

        $("#StateProvinceId option:nth-child(1)").attr("selected", "selected");
        $("#CityId option:nth-child(1)").attr("selected", "selected");
        $("#DistrictId option:nth-child(1)").attr("selected", "selected");
        //var ddlCities = $("#CityId");
        //ddlCities.html('');
        //ddlCities.append($('<option></option>').val(0).html("城市"));
        //var ddlDistricts = $("#DistrictId");
        //ddlDistricts.html('');
        //ddlDistricts.append($('<option></option>').val(0).html("区"));

        ClearErrors();
        ShowEditAddress();
    }

    function LoadAddress(addressId) {
        ClearErrors();
        ShowEditAddress();
        $("#hidCurrentEditId").val(addressId);

        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("CustomerGetAddress"))",
            data: { "addressId": addressId },
            dataType: "json",
            success: function (d) {
                if (d.Data.Success) {
                    $("#@Html.FieldIdFor(model => model.Address.FirstName)").val(d.Data.Model.FirstName);
                    $("#@Html.FieldIdFor(model => model.Address.ZipPostalCode)").val(d.Data.Model.ZipPostalCode);
                    $("#@Html.FieldIdFor(model => model.Address.PhoneNumber)").val(d.Data.Model.PhoneNumber);
                    $("#@Html.FieldIdFor(model => model.Address.Address1)").val(d.Data.Model.Address1);

                    $("#StateProvinceId").val(d.Data.Model.StateProvinceId);
                    LoadDistrictList(d.Data.Model.CityId, d.Data.Model.DistrictId);
                    LoadCityList(d.Data.Model.StateProvinceId, d.Data.Model.CityId);
                }
                else {
                    alert(d.Data.Message);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
            }
        });
    }

    function EditAddress(addressId) {
        if (!$("#AddressAddOrUpdateForm").valid())
            return;

        var id = $("#hidCurrentEditId").val();
        var firstName = $("#@Html.FieldIdFor(model => model.Address.FirstName)").val();
        var zipPostalCode = $("#@Html.FieldIdFor(model => model.Address.ZipPostalCode)").val();
        var phoneNumber = $("#@Html.FieldIdFor(model => model.Address.PhoneNumber)").val();
        var countryId = 0;//$("#CountryId").val();
        var stateProvinceId = $("#StateProvinceId").val();
        var cityId = $("#CityId").val();
        var districtId = $("#DistrictId").val();
        var address1 = $("#@Html.FieldIdFor(model => model.Address.Address1)").val();

        var data = {
            "id": id,
            "addressId": addressId,
            "firstName": firstName,
            "zipPostalCode": zipPostalCode,
            "phoneNumber": phoneNumber,
            "countryId": countryId,
            "stateProvinceId": stateProvinceId,
            "districtId": districtId,
            "cityId": cityId,
            "address1": address1
        };

        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.RouteUrl("CustomerAddressAddOrUpdate"))",
            data: data,
            success: function (d) {
                if (d.Data.Success) {
                    if (id == "-1" || id == "")
                        alert("新增收货地址信息成功");
                    else
                        alert("更新收货地址信息成功");
                    location.href = '@Url.RouteUrl("CustomerAddresses")';
                }
                else {
                    var result = "";
                    for (var i in d.Data.Errors) {
                        result = result + d.Data.Errors[i] + "\r\n";
                    }
                    alert(result);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
            }
        });
    }

    function SetDefaultAddress(addressId) {
        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.RouteUrl("CustomerSetDefaultAddress"))",
            data: { "addressId": addressId },
            success: function (d) {
                if (d.Data.Success) {
                    alert("设置默认地址成功");
                    location.href = '@Url.RouteUrl("CustomerAddresses")';
                }
                else {
                    alert(d.Data.Message);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
            }
        });
    }
</script>
