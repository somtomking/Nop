@model CustomerInfoModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(T("PageTitle.Info").Text);
    Html.AppendCssFileParts("~/Themes/60GO2/Content/css/include_my.css");
}
@section _left
{
    @Html.Partial("MyAccountNavigation", Model.NavigationModel, new ViewDataDictionary())
}
<script src="~/Scripts/fileuploader.js"></script>
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/admin.common.js"></script>
<script src="~/Scripts/fileuploader.js"></script>

<script type="text/javascript">
    $(function () {
        $("#@Html.FieldIdFor(model => model.StateProvinceId)").change(function () {
            var selectedItem = $(this).val();
            var ddlCities = $("#@Html.FieldIdFor(model => model.CityId)");
            var ddlDistricts = $("#@Html.FieldIdFor(model => model.DistrictId)");
            var statesProgress = $("#states-loading-progress2");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetCitiesByStateProvinceId"))",
                data: { "stateProvinceId": selectedItem, "addEmptyCityIfRequired": "true" },
                success: function (data) {
                    ddlCities.html('');
                    $.each(data, function (id, option) {
                        ddlCities.append($('<option></option>').val(option.id).html(option.name));
                    });

                    ddlDistricts.html('');
                    ddlDistricts.append($('<option></option>').val(0).html("区"));

                    //statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });
        });
        $("#@Html.FieldIdFor(model => model.CityId)").change(function () {
            var selectedItem = $(this).val();
            var ddlDistricts = $("#@Html.FieldIdFor(model => model.DistrictId)");
            var statesProgress = $("#states-loading-progress3");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("GetDistrictsByCityId"))",
                data: { "cityId": selectedItem, "addEmptyDistrictIfRequired": "true" },
                success: function (data) {
                    ddlDistricts.html('');
                    $.each(data, function (id, option) {
                        ddlDistricts.append($('<option></option>').val(option.id).html(option.name));
                    });
                    //statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });
        });
    });


    $(function () {
        var uploaderpicture = new qq.FileUploader({
            element: document.getElementById('divfile'),
            action: '/Picture/AsyncUpload',
            onComplete: function (id, fileName, responseJSON) {
                if (responseJSON.success) {
                    $("#AvatarPictureId").val(responseJSON.pictureId);
                    $("#divimage").html("<img src='" + responseJSON.imageUrl + "'/>");
                }
            },
            allowedExtensions: ["jpg", "gif", "bmp", "png", "jpeg"],
            sizeLimit: 2097152,
            messages: { typeError: "@T("Common.FileUploader.typeError")" }
        });
        //隐藏上传文件按钮和信息提示
        $(".qq-uploader").hide();
    });
    function SelectImage() {
        //触发上传事件
        $(".qq-upload-button").find("input").click();
        //触发上传事件
        //var file = document.getElementById('file');
        //if (document.all) {
        //    file.click();
        //}
        //else {
        //    var evt = document.createEvent("MouseEvents");
        //    evt.initEvent("click", true, true);
        //    file.dispatchEvent(evt);
        //}
    }
</script>
<div class="breadcrumbs clearfix">
    <ul>
        <li>@T("Customer.Info")</li>
    </ul>
</div>
<div class="mycneterCon">
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {        
        <div class="box-ok-s">@Model.SuccessMessage</div>
    }

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-center" }))
    {
        @Html.AntiForgeryToken()
        if (Html.ValidationSummary(true) != null)
        {  
        <div class="box-error-s">
            @Html.ValidationSummary(true)
        </div>
        }    
        <div class="formList">
            <dl class="clearfix">
                <dt>@T("customer.info.image")：</dt>
                <dd>
                    @Html.HiddenFor(model => model.AvatarPictureId, new { id = "AvatarPictureId" })
                    <div id="divimage" onclick="SelectImage();">
                        @if (string.IsNullOrEmpty(Model.PictureUrl))
                        {
                            <img src="/Themes/60GO2/Content/images/comment_user.jpg" width="80" height="80" class="userIcon">
                        }
                        else
                        {
                            <img src="@Model.PictureUrl"  width="80" height="80" class="userIcon">
                        }
                    </div>
                    <div id="divfile">
                        <input type="file" multiple="multiple" name="file" style="display: none">
                    </div>
                </dd>
            </dl>
            <dl class="clearfix">
                <dt>@T("customer.info.memberaccount")：</dt>
                <dd>
                    @Model.Username
                </dd>
            </dl>
            <dl class="clearfix">
                <dt>@T("customer.info.name")：</dt>
                <dd>
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "input-style input-m", maxlength = 30 })<br />
                    @Html.ValidationMessageFor(model => model.FirstName)
                </dd>
            </dl>
            @if(Model.GenderEnabled)
            {
                <dl class="clearfix">
                    <dt>@T("customer.info.sex")：</dt>
                    <dd class="mar_r_10">
                        <div class="beleft mar_r_10">
                            @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                            <label for="gender-male">@T("customer.info.man")</label>
                        </div>
                        <div class="beleft mar_r_10">
                            @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                            <label for="gender-female">@T("customer.info.woman")</label>
                            <br />
                            @Html.ValidationMessageFor(model => model.Gender)
                        </div>
                    </dd>
                </dl>             
            }
            <dl class="clearfix">
                <dt>@T("customer.info.realname")：</dt>
                <dd>
                    @Html.TextBoxFor(model => model.LastName, new { @class = "input-style input-m", maxlength = 30 })<br />
                    @Html.ValidationMessageFor(model => model.LastName)
                </dd>
            </dl>
            <dl class="clearfix">
                <dt>@T("customer.info.address")：</dt>
                <dd>
                    @Html.DropDownList("StateProvinceId", Model.AvailableStates, new { @class = "select-style" })
                    <span id="states-loading-progress" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                    @Html.DropDownList("CityId", Model.AvailableCities, new { @class = "select-style" })
                    <span id="states-loading-progress2" style="display: none;" class="please-wait">@T("Common.Wait...")</span>
                    @*  @Html.DropDownList("DistrictId", Model.AvailableDistricts, new { @class = "select-style" })
                    <span id="states-loading-progress3" style="display: none;" class="please-wait">@T("Common.Wait...")</span>*@<br />
                    @Html.ValidationMessageFor(model => model.StateProvinceId)
                    @Html.ValidationMessageFor(model => model.CityId)
                    @*   @Html.ValidationMessageFor(model => model.DistrictId)*@
                </dd>
            </dl>
            @if (Model.DateOfBirthEnabled)
            {
                <dl class="clearfix">
                    <dt>@T("customer.info.brithday")：</dt>
                    <dd>
                        @Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
                                        Html.FieldNameFor(x => x.DateOfBirthMonth),
                                        Html.FieldNameFor(x => x.DateOfBirthYear),
                                        DateTime.Now.Year - 83,
                                        DateTime.Now.Year - 1,
                                        Model.DateOfBirthDay,
                                        Model.DateOfBirthMonth,
                                        Model.DateOfBirthYear)
                        @Html.ValidationMessageFor(model => model.DateOfBirthDay)
                        @Html.ValidationMessageFor(model => model.DateOfBirthMonth)
                        @Html.ValidationMessageFor(model => model.DateOfBirthYear)
                    </dd>
                </dl>
            }
            <dl class="clearfix">
                <dt>@T("customer.info.maritalstatus")：</dt>
                <dd class="mar_r_10">
                    <div class="beleft mar_r_10">
                        @Html.RadioButton("Maritalstatus", "M", (Model.Maritalstatus == "M"), new { id = "Maritalstatus-married" })
                        <label for="Maritalstatus-married">@T("customer.info.married")</label>
                    </div>
                    <div class="beleft mar_r_10">
                        @Html.RadioButton("Maritalstatus", "U", (Model.Maritalstatus == "U"), new { id = "Maritalstatus-unmarried" })
                        <label for="Maritalstatus-unmarried">@T("customer.info.unmarried")</label>
                    </div>
                    <div class="beleft mar_r_10">
                        @Html.RadioButton("Maritalstatus", "C", (Model.Maritalstatus == "C"), new { id = "Maritalstatus-confidential" })
                        <label for="Maritalstatus-confidential">@T("customer.info.confidential")</label>
                    </div>
                </dd>

            </dl>
            <dl class="clearfix">
                <dt>@T("customer.info.monthlyincome")：</dt>
                <dd>
                    @Html.DropDownList("MonthLyincome", Model.MonthlyincomeItem, new { @class = "select-style" })
                </dd>
            </dl>
            <dl class="clearfix">
                <dt>&nbsp;</dt>
                <dd>
                    <input type="submit" class="btn btn-green btn-md" value="@T("customer.info.submit")" /></dd>
            </dl>
        </div>      
    }
</div>
